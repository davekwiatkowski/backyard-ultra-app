name: deploy app to github pages

on:
  workflow_dispatch:
  push:
    branches: 'main'
  schedule:
    - cron: "0 1 * * *"

jobs:
  update_data:
    defaults:
      run:
        working-directory: ./data
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install python, pipenv, and pipfile packages
        uses: ./.github/actions/install-python-pipenv-pipfile
        with:
          python-version: 3.12.3
          working-directory: ./data/

      - name: execute py script
        run: pipenv run start

      - uses: actions/upload-artifact@v4
        with:
          name: data
          path: ./app/static/data/

  build_app:
    defaults:
      run:
        working-directory: ./app
    needs: update_data
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: data
          path: ./app/static/data/

      - name: install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: '**/package-lock.json' # THIS PATTERN did the trick for me.

      - name: install dependencies
        run: npm install

      - name: build
        env:
          BASE_PATH: '/${{ github.event.repository.name }}'
        run: |
          npm run build

      - name: upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'app/build/'

  deploy:
    defaults:
      run:
        working-directory: ./app
    needs: build_app
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: deploy
        id: deployment
        uses: actions/deploy-pages@v4